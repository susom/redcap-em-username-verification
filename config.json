{
  "name": "Username Verification",

  "namespace":"Stanford\\UsernameVerification",

  "description": "Provides ability to lookup username details from external sources and verify on user-rights.  Also provides for cleanup of invalid users in your user-rights table.",

  "versions": [
    { "0.1": "Initial" }
  ],

  "framework-version": 13,

  "authors": [
    {
      "name": "Andrew Martin",
      "email": "andy123@stanford.edu",
      "institution": "Stanford University"
    },
    {
			"name": "Ryan Valentine",
			"email": "rval@stanford.edu",
			"institution": "Stanford University"
		}
  ],

  "no-auth-pages": [
  ],

  "links": {
    "control-center": [
      {
        "name": "Username Verification Cleanup",
        "icon": "group_gear",
        "url": "cleanup.php"
      }
    ],
    "project": [
    ]
  },

  "system-settings": [
    {
      "key": "instructions",
      "name": "<h6><b>About Verify Username</b></h6><p>The Verify Username module is designed to help prevent erroneous usernames in the user table when using non-table-based authentication mechanisms.  In these methods, REDCap does not know how to 'verify' if a username that hasn't accessed the system is valid.</p><p>In order for the <b>Email</b> button to work, you must check the box above to Enable this EM for ALL projects in the system config.",
      "type": "descriptive"
    },
    {
      "key": "method",
      "name": "<b>Verification Method</b><br>The Username Verifier was designed to be extended.<br>For now, the only option is web-service.",
      "required": true,
      "type": "radio",
      "choices": [
        {
          "name": "Web Service",
          "value": "web-service"
        }
      ]
    },
    {
      "key": "web-service-url",
      "name": "<b>Web Service URL</b><br>This is the API endpoint that will handle our calls.<br>This url should <code>username</code> in the query string and return a json<br>array containing status, message, and user.<i>e.g.</i><br><code>{<br>&nbsp;&nbsp;\"user\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;\"username\":\"andy123\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"user_displayname\":\"Andy Martin\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"user_firstname\":\"Andrew\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"user_lastname\":\"Martin\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"user_email\":\"andy123@stanford.edu\"<br>&nbsp;&nbsp;},<br>&nbsp;&nbsp;\"status\":true,<br>&nbsp;&nbsp;\"message\":\"Custom Message for End User\"<br>}</code><br>See the documentation for examples.",
      "required": true,
      "type": "text",
      "branchingLogic": {
        "field": "method",
        "value": "web-service"
      }
    },
    {
      "key": "cleanup-email-subject",
      "name": "<b>Email Cleanup Subject</b><br>Subject line of cleanup email.<br>Supports these tags:<br><code>{{title}}, {{pid}}, {{username}}, {{app-url}}",
      "required": false,
      "type": "text"
    },
    {
      "key": "cleanup-email-template",
      "name": "<b>Email Cleanup Template</b><br>When you cleanup invalid user ids, this email can be sent to the user that created the invalid ID<br>Supports these tags:<br><code>{{title}}, {{pid}}, {{username}}, {{app-url}}",
      "required": false,
      "type": "rich-text"
    },
    {
      "key": "cleanup-email-from",
      "name": "<b>Send Cleanup From</b><br>Select the reply-to email address for the cleanup email alerts<br>(leave blank for current superuser that presses button)",
      "required": false,
      "type": "text"
    },
    {
      "key": "allowlist",
      "name": "<b>Always Allow Usernames</b><br>A comma-separated list of usernames to always verify as valid",
      "required": false,
      "type": "text"
    },
    {
      "key": "enable-system-debug-logging",
      "name": "<b>Enable Debug Logging</b><br>If you have the Stanford emLogger external module installed and configured,<br> you can enable additional debug-level logging through this checkbox</b>",
      "required": false,
      "type": "checkbox"
    }
  ],

  "project-settings": [
  ]
}
